name: JS Package Publish

env:
  DEBUG: napi:*
  APP_NAME: 'binary-options-tools'
  MACOSX_DEPLOYMENT_TARGET: '10.13'

permissions:
  contents: write
  id-token: write

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: macos-latest
            target: x86_64-apple-darwin
            build: yarn build --target x86_64-apple-darwin
          - host: windows-latest
            target: x86_64-pc-windows-msvc
            build: yarn build --target x86_64-pc-windows-msvc
          - host: windows-latest
            target: i686-pc-windows-msvc
            build: |
              yarn build --target i686-pc-windows-msvc
              yarn test
    name: stable - ${{ matrix.settings.target }} - node@20
    runs-on: ${{ matrix.settings.host }}
    defaults:
      run:
        working-directory: BinaryOptionsToolsJs
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
          cache-dependency-path: BinaryOptionsToolsJs/yarn.lock
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.settings.target }}
      - name: Cache Cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            BinaryOptionsToolsJs/.cargo-cache
            BinaryOptionsToolsJs/target/
          key: cargo-${{ matrix.settings.target }}-${{ matrix.settings.host }}
      - name: Install dependencies
        run: yarn install
      - name: Setup Node.js x86
        if: matrix.settings.target == 'i686-pc-windows-msvc'
        uses: actions/setup-node@v4
        with:
          node-version: 20
          architecture: x86
          cache: yarn
          cache-dependency-path: BinaryOptionsToolsJs/yarn.lock
      - name: Build
        run: ${{ matrix.settings.build }}
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: bindings-${{ matrix.settings.target }}
          path: BinaryOptionsToolsJs/${{ env.APP_NAME }}.*.node
          if-no-files-found: error

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
      - name: Install dependencies
        run: yarn install
        working-directory: BinaryOptionsToolsJs
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Move artifacts
        run: yarn artifacts
        working-directory: BinaryOptionsToolsJs
      - name: List packages
        run: ls -R ./npm
        working-directory: BinaryOptionsToolsJs
      - name: Publish to NPM
        run: |
          npm config set provenance true
          if git log -1 --pretty=%B | grep -qE "^[0-9]+\.[0-9]+\.[0-9]+$"; then
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
            npm publish --access public
          elif git log -1 --pretty=%B | grep -qE "^[0-9]+\.[0-9]+\.[0-9]+"; then
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
            npm publish --tag next --access public
          else
            echo "Not a release, skipping publish"
        working-directory: BinaryOptionsToolsJs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

